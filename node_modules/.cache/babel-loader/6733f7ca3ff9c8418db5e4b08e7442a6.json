{"ast":null,"code":"var _jsxFileName = \"/Users/julie/code/Perso/react/react-complete-guide/counter_section18/src/components/Counter.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { counterActions } from '../store/index';\nimport classes from './Counter.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.counter);\n  const show = useSelector(state => state.showCounter);\n\n  function incrementCounterHandler() {\n    dispatch(counterActions.increment()); //increment is a method creating, when executed, a full action object with the type set and unique action identifier created by Redux Toolkit automatically\n  }\n\n  ;\n\n  function increaseCounterHandler() {\n    dispatch(counterActions.increase(10)); // when a payload is needed by the slice method => pass the data by an object with any property pairs we need or any value needed\n    // In fact Redux Toolkit create this action object: { type: UNIQUE_IDENTIFIER , payload: value passed to the method }\n  }\n\n  ;\n\n  function decrementCounterHandler() {\n    dispatch(counterActions.decrement());\n  }\n\n  ;\n\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggle());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementCounterHandler,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseCounterHandler,\n        children: \"Increase by 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrementCounterHandler,\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"a6W6bcAuHVADZPU2xn93xNQZltc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/julie/code/Perso/react/react-complete-guide/counter_section18/src/components/Counter.js"],"names":["useSelector","useDispatch","counterActions","classes","Counter","dispatch","counter","state","show","showCounter","incrementCounterHandler","increment","increaseCounterHandler","increase","decrementCounterHandler","decrement","toggleCounterHandler","toggle","value"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,OAAO,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,OAAhB,CAA3B;AACA,QAAME,IAAI,GAAGR,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACE,WAAhB,CAAxB;;AAEA,WAASC,uBAAT,GAAmC;AACjCL,IAAAA,QAAQ,CAACH,cAAc,CAACS,SAAf,EAAD,CAAR,CADiC,CACM;AACxC;;AAAA;;AAED,WAASC,sBAAT,GAAkC;AAChCP,IAAAA,QAAQ,CAACH,cAAc,CAACW,QAAf,CAAwB,EAAxB,CAAD,CAAR,CADgC,CACO;AACvC;AACD;;AAAA;;AAED,WAASC,uBAAT,GAAmC;AACjCT,IAAAA,QAAQ,CAACH,cAAc,CAACa,SAAf,EAAD,CAAR;AACD;;AAAA;;AAED,QAAMC,oBAAoB,GAAG,MAAM;AACjCX,IAAAA,QAAQ,CAACH,cAAc,CAACe,MAAf,EAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAM,IAAA,SAAS,EAAEd,OAAO,CAACG,OAAzB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,IAAI,iBAAI;AAAK,MAAA,SAAS,EAAEL,OAAO,CAACe,KAAxB;AAAA,gBAAgCZ;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFX,eAGE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEI,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEE,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAEE,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE;AAAQ,MAAA,OAAO,EAAEE,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAlCD;;GAAMZ,O;UACaH,W,EACDD,W,EACHA,W;;;KAHTI,O;AAoCN,eAAeA,OAAf","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\n\nimport { counterActions } from '../store/index';\nimport classes from './Counter.module.css';\n\nconst Counter = () => {\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.counter);\n  const show = useSelector(state => state.showCounter);\n\n  function incrementCounterHandler() {\n    dispatch(counterActions.increment());  //increment is a method creating, when executed, a full action object with the type set and unique action identifier created by Redux Toolkit automatically\n  };\n\n  function increaseCounterHandler() {\n    dispatch(counterActions.increase(10)); // when a payload is needed by the slice method => pass the data by an object with any property pairs we need or any value needed\n    // In fact Redux Toolkit create this action object: { type: UNIQUE_IDENTIFIER , payload: value passed to the method }\n  };\n\n  function decrementCounterHandler() {\n    dispatch(counterActions.decrement());\n  };\n\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggle());\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {show && <div className={classes.value}>{counter}</div>}\n      <div>\n        <button onClick={incrementCounterHandler}>Increment</button>\n        <button onClick={increaseCounterHandler}>Increase by 5</button>\n        <button onClick={decrementCounterHandler}>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}