{"ast":null,"code":"// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    isAuthenticated: false\n  },\n  reducers: {\n    toggle(state) {\n      state.isAuthenticated = !state.isAuthenticated;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store; // function counterReducer(state = initialState, action) {\n//   if (action.type === 'increment') {\n//     return { \n//       counter: state.counter + 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === 'increase') {\n//     return { \n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === 'decrement') {\n//     return { \n//       counter: state.counter - 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === 'toggle') {\n//     return { \n//       counter: state.counter,\n//       showCounter: !state.showCounter\n//     };\n//   }\n//   return state;\n// };\n// const store = createStore(counterReducer);","map":{"version":3,"sources":["/Users/julie/code/Perso/react/react-complete-guide/counter_section18/src/store/index.js"],"names":["createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","toggle","authSlice","isAuthenticated","store","reducer","auth","counterActions","actions","authActions"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAArB;AAGA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC/BM,EAAAA,IAAI,EAAE,SADyB;AAE/BJ,EAAAA,YAF+B;AAG/BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACN,OAAN;AACD,KAHO;;AAIRO,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACN,OAAN;AACD,KANO;;AAORQ,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACtBH,MAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC,OAAvC;AACD,KATO;;AAWRC,IAAAA,MAAM,CAACL,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACL,WAAN,GAAoB,CAACK,KAAK,CAACL,WAA3B;AACD;;AAbO;AAHqB,CAAD,CAAhC;AAoBA,MAAMW,SAAS,GAAGf,WAAW,CAAC;AAC5BM,EAAAA,IAAI,EAAE,MADsB;AAE5BJ,EAAAA,YAAY,EAAE;AAAEc,IAAAA,eAAe,EAAE;AAAnB,GAFc;AAG5BT,EAAAA,QAAQ,EAAG;AACTO,IAAAA,MAAM,CAACL,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACO,eAAN,GAAwB,CAACP,KAAK,CAACO,eAA/B;AACD;;AAHQ;AAHiB,CAAD,CAA7B;AAUA,MAAMC,KAAK,GAAGhB,cAAc,CAAC;AAC3BiB,EAAAA,OAAO,EAAE;AAAEf,IAAAA,OAAO,EAAEE,YAAY,CAACa,OAAxB;AAAiCC,IAAAA,IAAI,EAAEJ,SAAS,CAACG;AAAjD;AADkB,CAAD,CAA5B;AAIA,OAAO,MAAME,cAAc,GAAGf,YAAY,CAACgB,OAApC;AACP,OAAO,MAAMC,WAAW,GAAGP,SAAS,CAACM,OAA9B;AAEP,eAAeJ,KAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA","sourcesContent":["// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\n\nconst initialState = { counter: 0, showCounter: true };\n\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: { isAuthenticated: false },\n  reducers : {\n    toggle(state) {\n      state.isAuthenticated = !state.isAuthenticated\n    }\n  }\n});\n\nconst store = configureStore({\n  reducer: { counter: counterSlice.reducer, auth: authSlice.reducer }\n});\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\n\nexport default store;\n\n\n// function counterReducer(state = initialState, action) {\n//   if (action.type === 'increment') {\n//     return { \n//       counter: state.counter + 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n  \n//   if (action.type === 'increase') {\n//     return { \n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'decrement') {\n//     return { \n//       counter: state.counter - 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'toggle') {\n//     return { \n//       counter: state.counter,\n//       showCounter: !state.showCounter\n//     };\n//   }\n\n  \n//   return state;\n// };\n\n// const store = createStore(counterReducer);\n"]},"metadata":{},"sourceType":"module"}